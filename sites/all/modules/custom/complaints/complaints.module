<?php
/**
 * Implements hook_node_info()
 */
function complaints_node_info() {
    return array(
        'complaint' => array(
            'name' => 'Complaint',
            'base' => 'complaint',
            'description' => 'You can define new complaints here',
            'has_title' => FALSE,
            // 'title_label' => 'Complaint title'
         )
    );
}
/**
 * Implement hook_form()
 */
function complaint_form($node, $form_state) {
    return node_content_form($node, $form_state);
}

/**
* implement hook_menu()
* create menu item
* complaints_menu function will create a menu item which can be access with localhost/path/to/complaints
*/

function complaints_menu() {
    $items = array();
     $items['complaints'] = array(
        'title'             =>  'Complaints List',  //page title
        'description'       =>  'Complaints Information',  //description show when mouse hover on link
        'page callback'     =>  'complaints_list',  //callback function which is invoked when menu item is called.
        'access callback'   =>  true,  //any user can access this page
       );
     return $items;
}


function complaints_list() {
    $query = db_select('node', 'n')
        ->fields('n', array('nid', 'title', 'created'))
        ->condition('type', 'complaint')
        ->condition('status', 1)    
        ->orderBy('created', 'DESC') //Most recent first.
        ; 

    $result = $query->execute();
    $complaints_ids = array();
    foreach( $result as $row ) {
        $complaints_ids[] = $row->nid;
    }
    $complaints = node_load_multiple($complaints_ids);

   //send data to custom theme template
   //theme complaints_list created under sites\all\themes\bartik\templates\complaints\complaints-list.tpl.php 
   $output = theme('complaints_list', array('data'=> $complaints)); 
   return $output;
}

/**
 * Implements hook_theme().
 *
 * @see template_preprocess_contextual_links_example_object()
 */
function complaints_theme() {
    $themes['complaints_list'] = array(
      'template' => 'complaints-list',
    );
    return $themes;
}

function complaints_form_alter(&$form, &$form_state, $form_id) {

    if($form_id == 'complaint_node_form'){
        #The attachment field appears only if the complaint type is confidential.
        $form['file_attachment']['#states'] = array(
            'visible' => array(
                ':input[name="complaint_type[und]"]' => array(
                    array('value' => 'confidential'),
                ),
            ),
        );
        $form['workflow_status']['und']['#default_value'][0] = 'open';
    }
  }





